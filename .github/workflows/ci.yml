name: CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch:

concurrency:
    group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
    cancel-in-progress: true

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              id: setup-go
              uses: actions/setup-go@v5
              with:
                go-version-file: server/go.mod
                cache: true
                cache-dependency-path: server/go.sum

            - name: Capture Go caches paths
              id: go-cache-paths
              working-directory: server
              run: |
                echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_ENV
                echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_ENV

            - name: Cache Go modules and build cache
              uses: actions/cache@v4
              with:
                path: |
                  ${{ env.GOMODCACHE }}
                  ${{ env.GOCACHE }}
                key: ${{ runner.os }}-go-${{ hashFiles('server/go.sum') }}-${{ steps.setup-go.outputs.go-version }}
                restore-keys: |
                  ${{ runner.os }}-go-${{ hashFiles('server/go.sum') }}-
                  ${{ runner.os }}-go-

            - name: Download modules
              working-directory: server
              run: go mod download

            - name: go-test
              shell: bash
              run: make test

            - name: go-coverage
              shell: bash
              run: |-
                OUTPUT="$(make test-coverage)"
                TOTAL="$(echo $OUTPUT | awk 'END{print $NF}')"
                echo "::group::Coverage (${TOTAL})"
                echo "${OUTPUT}"
                echo "::endgroup::"

    lint:
        name: lint
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              id: setup-go
              uses: actions/setup-go@v5
              with:
                go-version-file: server/go.mod
                cache: true
                cache-dependency-path: server/go.sum

            - name: Capture Go caches paths
              id: go-cache-paths
              working-directory: server
              run: |
                echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_ENV
                echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_ENV

            - name: Cache Go modules and build cache
              uses: actions/cache@v4
              with:
                path: |
                  ${{ env.GOMODCACHE }}
                  ${{ env.GOCACHE }}
                key: ${{ runner.os }}-go-${{ hashFiles('server/go.sum') }}-${{ steps.setup-go.outputs.go-version }}
                restore-keys: |
                  ${{ runner.os }}-go-${{ hashFiles('server/go.sum') }}-
                  ${{ runner.os }}-go-

            - name: Download modules
              working-directory: server
              run: go mod download
            
            - name: diff-check
              shell: bash
              run: |-
                set -eEu
                set +o pipefail
                make diff-check

            - name: golangci-lint
              uses: golangci/golangci-lint-action@v6
              with:
                version: latest
                working-directory: server
                args: --config ../.golangci.yaml

    integration-test:
        name: integration-test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              id: setup-go
              uses: actions/setup-go@v5
              with:
                go-version-file: server/go.mod
                cache: true
                cache-dependency-path: server/go.sum

            - name: Capture Go caches paths
              id: go-cache-paths
              working-directory: server
              run: |
                echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_ENV
                echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_ENV

            - name: Cache Go modules and build cache
              uses: actions/cache@v4
              with:
                path: |
                  ${{ env.GOMODCACHE }}
                  ${{ env.GOCACHE }}
                key: ${{ runner.os }}-go-${{ hashFiles('server/go.sum') }}-${{ steps.setup-go.outputs.go-version }}
                restore-keys: |
                  ${{ runner.os }}-go-${{ hashFiles('server/go.sum') }}-
                  ${{ runner.os }}-go-

            - name: Download modules
              working-directory: server
              run: go mod download

            - name: Install dependencies
              run: sudo apt-get update && sudo apt-get install -y jq

            - name: Make integration script executable
              run: chmod +x scripts/integration-test.sh

            - name: Build server
              working-directory: server
              run: go build -o bin/server ./cmd/server

            - name: Start Go server
              working-directory: server
              run: ./bin/server &

            - name: Wait for server to start
              run: |
                # probe one of the endpoints; requires User-Id header
                until curl -s -o /dev/null -w "%{http_code}" -H "User-Id: 123" http://localhost:8080/health | grep -q "200"; do
                  echo "Waiting for server..."
                  sleep 1
                done

            - name: Run integration tests
              run: ./scripts/integration-test.sh
              env:
                ENV: dev

            - name: Stop Go server
              run: kill $(lsof -t -i:8080)